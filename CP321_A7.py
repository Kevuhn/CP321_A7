# -*- coding: utf-8 -*-
"""CP321_A7

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Tu__neQ75DvqVKVc9HmNmlK4IDIT98Y6
"""

#https://cp321-a7-x9vp.onrender.com

import dash
from dash import Dash, html, dcc, callback, Output, Input, dash_table
import plotly.express as px
import pandas as pd

df = pd.DataFrame({
    "country": ["Brazil", "Germany", "Italy", "Argentina", "France", "Uruguay", "England", "Spain", "Netherlands", "Hungary", "Czechoslovakia", "Sweden", "Croatia"],
    "wins": [5, 4, 4, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0],
    "years": [
        ["1958", "1962", "1970", "1994", "2002"],
        ["1954", "1974", "1990", "2014"],
        ["1934", "1938", "1982", "2006"],
        ["1978", "1986", "2022"],
        ["1998", "2018"],
        ["1930", "1950"],
        ["1966"],
        ["2010"],
        [], [], [], [], []
    ]
})

year_winners = {year: country for country, years in zip(df["country"], df["years"]) for year in years}


app = Dash(__name__)
server = app.server

app.layout = html.Div([
    html.H1("FIFA World Cup Winners Dashboard"),

    #dropdown for country selection
    html.Label("Select a Country:"),
    dcc.Dropdown(
        id='country-dropdown',
        options=[{'label': c, 'value': c} for c in df["country"]],
        value='Brazil'
    ),
    html.Div(id='country-output'),

    #dropdown for years
    html.Label("Select a Year:"),
    dcc.Dropdown(
        id='year-dropdown',
        options=[{'label': y, 'value': y} for y in year_winners.keys()],
        value='2022'
    ),
    html.Div(id='year-output'),


    #choropleth map
    dcc.Graph(id='choropleth-map'),


])

@app.callback(
    [Output('choropleth-map', 'figure'),
     Output('country-output', 'children'),
     Output('year-output', 'children')],
    [Input('country-dropdown', 'value'),
     Input('year-dropdown', 'value')]
)
def update_graph(selected_country, selected_year):
    #choropleth
    fig = px.choropleth(
        df,
        locations="country",
        locationmode="country names",
        color="wins",
        title="World Cup Winners by Country",
        color_continuous_scale="Blues"
    )

    #get country wins and print
    wins = df[df["country"] == selected_country]["wins"].values[0]
    country_output = f"{selected_country} has won the World Cup {wins} times."

    #get selected year and correlated winner
    winner = year_winners.get(selected_year, "No data available")
    year_output = f"The winner of the {selected_year} World Cup was {winner}."

    return fig, country_output, year_output

if __name__ == "__main__":
    app.run_server(debug=False)

